{"stats":{"totalMutantsCount":32,"killedCount":12,"notCoveredCount":0,"escapedCount":20,"errorCount":0,"syntaxErrorCount":0,"skippedCount":0,"ignoredCount":0,"timeOutCount":0,"msi":37.5,"mutationCodeCoverage":100,"coveredCodeMsi":37.5},"escaped":[{"mutator":{"mutatorName":"GreaterThanOrEqualTo","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho > 30 || $this->idade >= 65;\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ @@\n      * *\/\n     public function checkIsRetired() : bool\n     {\n-        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n+        return $this->tempoDeTrabalho > 30 || $this->idade >= 65;\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"PublicVisibility","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    protected function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":13},"diff":"--- Original\n+++ New\n@@ @@\n class UsuarioTest extends TestCase\n {\n     protected Usuario $user;\n-    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n+    protected function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n     {\n         \/\/ Arrange\n         $usuario = new Usuario(65, 30);","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n...                                                                 3 \/ 3 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (3 tests, 3 assertions)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(64, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":16},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 30);\n+        $usuario = new Usuario(64, 30);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(66, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":16},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 30);\n+        $usuario = new Usuario(66, 30);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 29);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":16},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 30);\n+        $usuario = new Usuario(65, 29);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 31);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":16},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 30);\n+        $usuario = new Usuario(65, 31);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"PublicVisibility","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    protected function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":26},"diff":"--- Original\n+++ New\n@@ @@\n         \/\/ Assert\n         $this->assertTrue($result);\n     }\n-    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n+    protected function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n     {\n         \/\/ Arrange\n         $usuario = new Usuario(60, 35);","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n...                                                                 3 \/ 3 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (3 tests, 3 assertions)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(59, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":29},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 35);\n+        $usuario = new Usuario(59, 35);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(61, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":29},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 35);\n+        $usuario = new Usuario(61, 35);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 34);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":29},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 35);\n+        $usuario = new Usuario(60, 34);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 36);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":29},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 35);\n+        $usuario = new Usuario(60, 36);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"PublicVisibility","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    protected function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":38},"diff":"--- Original\n+++ New\n@@ @@\n         \/\/ Assert\n         $this->assertTrue($result);\n     }\n-    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n+    protected function testCheckIsRetiredWhenOnlyAgeIsEnough()\n     {\n         \/\/ Arrange\n         $usuario = new Usuario(65, 20);","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n...                                                                 3 \/ 3 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (3 tests, 3 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(66, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":41},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 20);\n+        $usuario = new Usuario(66, 20);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 19);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":41},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 20);\n+        $usuario = new Usuario(65, 19);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 21);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":41},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 20);\n+        $usuario = new Usuario(65, 21);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"PublicVisibility","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    protected function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":50},"diff":"--- Original\n+++ New\n@@ @@\n         \/\/ Assert\n         $this->assertTrue($result);\n     }\n-    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n+    protected function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n     {\n         \/\/ Arrange\n         $usuario = new Usuario(60, 20);","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n...                                                                 3 \/ 3 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (3 tests, 3 assertions)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(59, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 20);\n+        $usuario = new Usuario(59, 20);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(61, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 20);\n+        $usuario = new Usuario(61, 20);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 19);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 20);\n+        $usuario = new Usuario(60, 19);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 21);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(60, 20);\n+        $usuario = new Usuario(60, 21);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\n....                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nOK (4 tests, 4 assertions)"}],"timeouted":[],"killed":[{"mutator":{"mutatorName":"PublicVisibility","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    protected function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":18},"diff":"--- Original\n+++ New\n@@ @@\n     \/*\n      * @return bool \n      * *\/\n-    public function checkIsRetired() : bool\n+    protected function checkIsRetired() : bool\n     {\n         return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nE\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 error:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenAgeAndTimeAreEnough\nError: Call to protected method Src\\Aposentadoria\\Models\\Usuario::checkIsRetired() from scope Src\\Tests\\Models\\UsuarioTest\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:19\n\nERRORS!\nTests: 1, Assertions: 0, Errors: 1."},{"mutator":{"mutatorName":"GreaterThanOrEqualToNegotiation","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho < 30 || $this->idade >= 65;\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ @@\n      * *\/\n     public function checkIsRetired() : bool\n     {\n-        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n+        return $this->tempoDeTrabalho < 30 || $this->idade >= 65;\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nF\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 failure:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetireWhenAgeAndTimeAreNotEnough\nFailed asserting that true is false.\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:59\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."},{"mutator":{"mutatorName":"GreaterThanOrEqualTo","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade > 65;\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ @@\n      * *\/\n     public function checkIsRetired() : bool\n     {\n-        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n+        return $this->tempoDeTrabalho >= 30 || $this->idade > 65;\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nF\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 failure:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenOnlyAgeIsEnough\nFailed asserting that false is true.\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:47\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."},{"mutator":{"mutatorName":"GreaterThanOrEqualToNegotiation","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade < 65;\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ @@\n      * *\/\n     public function checkIsRetired() : bool\n     {\n-        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n+        return $this->tempoDeTrabalho >= 30 || $this->idade < 65;\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nF\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 failure:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenOnlyAgeIsEnough\nFailed asserting that false is true.\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:47\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."},{"mutator":{"mutatorName":"LogicalOr","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 && $this->idade >= 65;\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ @@\n      * *\/\n     public function checkIsRetired() : bool\n     {\n-        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n+        return $this->tempoDeTrabalho >= 30 && $this->idade >= 65;\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nF\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 failure:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenOnlyAgeIsEnough\nFailed asserting that false is true.\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:47\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."},{"mutator":{"mutatorName":"LogicalOrAllSubExprNegation","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return !($this->tempoDeTrabalho >= 30) || !($this->idade >= 65);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ @@\n      * *\/\n     public function checkIsRetired() : bool\n     {\n-        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n+        return !($this->tempoDeTrabalho >= 30) || !($this->idade >= 65);\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nF\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 failure:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenAgeAndTimeAreEnough\nFailed asserting that false is true.\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:22\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."},{"mutator":{"mutatorName":"LogicalOrNegation","originalSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n    }\n}","mutatedSourceCode":"<?php\n\nnamespace Src\\Aposentadoria\\Models;\n\nclass Usuario\n{\n    protected int $idade;\n    protected int $tempoDeTrabalho;\n    public function __construct(int $idade, int $tempoDeTrabalho)\n    {\n        $this->idade = $idade;\n        $this->tempoDeTrabalho = $tempoDeTrabalho;\n    }\n    \/*\n     * @return bool \n     * *\/\n    public function checkIsRetired() : bool\n    {\n        return !($this->tempoDeTrabalho >= 30 || $this->idade >= 65);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Aposentadoria\/Models\/Usuario.php","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ @@\n      * *\/\n     public function checkIsRetired() : bool\n     {\n-        return $this->tempoDeTrabalho >= 30 || $this->idade >= 65;\n+        return !($this->tempoDeTrabalho >= 30 || $this->idade >= 65);\n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nF\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 failure:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenAgeAndTimeAreEnough\nFailed asserting that false is true.\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:22\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."},{"mutator":{"mutatorName":"MethodCallRemoval","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":22},"diff":"--- Original\n+++ New\n@@ @@\n         $usuario = new Usuario(65, 30);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n-        \/\/ Assert\n-        $this->assertTrue($result);\n+        \n     }\n     public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n     {","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nR...                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 risky test:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenAgeAndTimeAreEnough\nThis test did not perform any assertions\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:11\n\nOK, but incomplete, skipped, or risky tests!\nTests: 4, Assertions: 3, Risky: 1."},{"mutator":{"mutatorName":"MethodCallRemoval","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":35},"diff":"--- Original\n+++ New\n@@ @@\n         $usuario = new Usuario(60, 35);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n-        \/\/ Assert\n-        $this->assertTrue($result);\n+        \n     }\n     public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n     {","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nR...                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 risky test:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenAgeAndTimeAreEnough2\nThis test did not perform any assertions\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:20\n\nOK, but incomplete, skipped, or risky tests!\nTests: 4, Assertions: 3, Risky: 1."},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(64, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":41},"diff":"--- Original\n+++ New\n@@ @@\n     public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n     {\n         \/\/ Arrange\n-        $usuario = new Usuario(65, 20);\n+        $usuario = new Usuario(64, 20);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n         \/\/ Assert","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nF\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 failure:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenOnlyAgeIsEnough\nFailed asserting that false is true.\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:36\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."},{"mutator":{"mutatorName":"MethodCallRemoval","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":47},"diff":"--- Original\n+++ New\n@@ @@\n         $usuario = new Usuario(65, 20);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n-        \/\/ Assert\n-        $this->assertTrue($result);\n+        \n     }\n     public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n     {","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nR...                                                                4 \/ 4 (100%)\n\nTime: 00:00.003, Memory: 8.00 MB\n\nThere was 1 risky test:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetiredWhenOnlyAgeIsEnough\nThis test did not perform any assertions\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:29\n\nOK, but incomplete, skipped, or risky tests!\nTests: 4, Assertions: 3, Risky: 1."},{"mutator":{"mutatorName":"MethodCallRemoval","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertFalse($result);\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Src\\Tests\\Models;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Src\\Aposentadoria\\Models\\Usuario;\nclass UsuarioTest extends TestCase\n{\n    protected Usuario $user;\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 30);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenAgeAndTimeAreEnough2()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 35);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetiredWhenOnlyAgeIsEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(65, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \/\/ Assert\n        $this->assertTrue($result);\n    }\n    public function testCheckIsRetireWhenAgeAndTimeAreNotEnough()\n    {\n        \/\/ Arrange\n        $usuario = new Usuario(60, 20);\n        \/\/ Act\n        $result = $usuario->checkIsRetired();\n        \n    }\n}","originalFilePath":"\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php","originalStartLine":59},"diff":"--- Original\n+++ New\n@@ @@\n         $usuario = new Usuario(60, 20);\n         \/\/ Act\n         $result = $usuario->checkIsRetired();\n-        \/\/ Assert\n-        $this->assertFalse($result);\n+        \n     }\n }","processOutput":"PHPUnit 9.6.12 by Sebastian Bergmann and contributors.\n\nR...                                                                4 \/ 4 (100%)\n\nTime: 00:00.002, Memory: 8.00 MB\n\nThere was 1 risky test:\n\n1) Src\\Tests\\Models\\UsuarioTest::testCheckIsRetireWhenAgeAndTimeAreNotEnough\nThis test did not perform any assertions\n\n\/home\/nathan\/dev\/mutation-testing\/src\/Tests\/Models\/UsuarioTest.php:38\n\nOK, but incomplete, skipped, or risky tests!\nTests: 4, Assertions: 3, Risky: 1."}],"errored":[],"syntaxErrors":[],"uncovered":[],"ignored":[]}